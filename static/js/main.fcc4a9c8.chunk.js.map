{"version":3,"sources":["App.js","serviceWorker.js","Line.js","DataSeries.js","LineChart.js","Graph.js","ContactCard.js","index.js"],"names":["App","state","data","fetch","method","then","response","json","setState","this","GetWorldStatistics","className","cases","deaths","recovered","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","Line","props","path","stroke","fill","strokeWidth","d","defaultProps","DataSeries","xScale","yScale","line","d3","x","y","curve","points","colors","LineChart","width","height","domain","minDate","maxDate","range","xAxis","ticks","every","title","append","attr","call","yMin","yMax","yAxis","textAnchor","fontSize","Graph","covidData","bind","headers","cumulativeData","datum","death","getDate","date","derive","render","numberDate","year","Math","floor","month","Date","derivationNumber","i","length","pop","map","pointsHasData","isDataLoaded","ContactCard","href","target","rel","ReactDOM","StrictMode","document","getElementById","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fcc4a9c8.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {data: []}\n\n    // this.GetWorldStatistics = this.GetWorldStatistics.bind(this);\n  }\n\n\n  GetWorldStatistics() {\n    fetch('https://coronavirus-19-api.herokuapp.com/all', {method: 'GET'})\n      .then((response) =>{\n        return response.json();\n      })\n      .then(json => {\n        this.setState({ data: json});\n      })\n  }\n\n  componentDidMount() {\n    this.GetWorldStatistics();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>Global COVID19 stats:</div>\n          <div>cases: {this.state.data.cases}</div>\n          <div>deaths: {this.state.data.deaths}</div>\n          <div>recovered: {this.state.data.recovered}</div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react'\r\n\r\nclass Line extends Component {\r\n    static defaultProps = {\r\n        stroke: 'white',\r\n        fill: 'none',\r\n        strokeWidth: 3\r\n    }\r\n\r\n    render() {\r\n        let {path, stroke, fill, strokeWidth } = this.props;\r\n        return (\r\n            <path\r\n                d={path}\r\n                stroke={stroke}\r\n                fill={fill}\r\n                strokeWidth={strokeWidth}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Line;","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport Line from './Line';\r\n\r\nclass DataSeries extends Component {\r\n    static defaultProps = {\r\n        data: [],\r\n        colors: d3.scaleOrdinal(d3.schemeCategory10)\r\n    }\r\n\r\n    render() {\r\n        let { data, xScale, yScale } = this.props;\r\n\r\n        let line = d3.line()\r\n            .x((d) => {return xScale(d.x);})\r\n            .y((d) => {return yScale(d.y);})\r\n            .curve(d3.curveCardinal);\r\n\r\n        return (\r\n            <Line\r\n                path={line(data.points)}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataSeries;","import React, { Component } from 'react';\r\nimport DataSeries from './DataSeries';\r\nimport * as d3 from 'd3';\r\n\r\nclass LineChart extends Component {\r\n    static defaultProps = {\r\n        width: 600,\r\n        height: 300\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { width, height, data } = this.props;\r\n\r\n        let xScale = d3.scaleTime()\r\n                        .domain([data.minDate, data.maxDate])\r\n                        .range([0, width])\r\n    \r\n        let xAxis = d3.axisBottom(xScale)\r\n        xAxis.ticks(d3.timeMonth.every(1));\r\n        d3.select(`[title=\"${data.title}\"]`).append(\"g\").attr(\"transform\", `translate(40,${height})`).call(xAxis)\r\n\r\n        let yScale = d3.scaleLinear()\r\n                        .domain([data.yMin, data.yMax])\r\n                        .range([height, 30])\r\n        \r\n        let yAxis = d3.axisLeft(yScale)\r\n        yAxis.ticks(5);\r\n        d3.select(`[title=\"${data.title}\"]`).append(\"g\").attr(\"transform\", `translate(40,0)`).call(yAxis)\r\n        d3.select(`[title=\"${data.title}\"]`).attr(\"viewBox\", \"0 0 630 330\")\r\n    }\r\n\r\n\r\n    render() {\r\n        let { width, height, data } = this.props;\r\n\r\n        let xScale = d3.scaleTime()\r\n                        .domain([data.minDate, data.maxDate])\r\n                        .range([40, width])\r\n        xScale.ticks(5);\r\n\r\n        let yScale = d3.scaleLinear()\r\n                        .domain([data.yMin, data.yMax])\r\n                        .range([height, 30])\r\n        return (\r\n            <svg width={\"80vw\"} height={\"50vw\"} title={data.title}>\r\n                <g>\r\n                    <text\r\n                        x={(width+30)/2}\r\n                        y={15}\r\n                        textAnchor=\"middle\"\r\n                        fontSize=\"16px\"\r\n                        fill=\"white\"\r\n                    >{data.title}</text>\r\n                    <DataSeries \r\n                        xScale={xScale}\r\n                        yScale={yScale}\r\n                        data={data}\r\n                    />\r\n                </g>\r\n            </svg>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LineChart;","import React, { Component } from 'react';\r\nimport '../node_modules/react-vis/dist/style.css';\r\nimport * as d3 from 'd3';\r\nimport './Graph.css';\r\nimport LineChart from './LineChart';\r\n\r\nclass Graph extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {data: [], covidData: {}};\r\n\r\n        this.GetWorldStatistics = this.GetWorldStatistics.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.GetWorldStatistics()\r\n    }\r\n\r\n    GetWorldStatistics() {\r\n        fetch('https://covidtracking.com/api/v1/us/daily.json', {method: 'GET', headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        }} )\r\n        .then((response) =>{\r\n            return response.json();\r\n        })\r\n        .then(json => {\r\n            this.setState({ data: json, covidData: [\r\n                {\r\n                    points: this.cumulativeData(json),\r\n                    yMin: d3.min(json, function(datum) {return datum.death}),\r\n                    yMax: d3.max(json, function(datum) {return datum.death}),\r\n                    minDate: this.getDate(d3.min(json, function(datum) {return datum.date})),\r\n                    maxDate: this.getDate(d3.max(json, function(datum) {return datum.date})),\r\n                    title: \"US total deaths\"\r\n                },\r\n                {\r\n                    points: this.cumulativeData(this.derive(json, 1)),\r\n                    yMin: d3.min(json, function(datum) {return datum.death}),\r\n                    yMax: d3.max(json, function(datum) {return datum.death}),\r\n                    minDate: this.getDate(d3.min(json, function(datum) {return datum.date})),\r\n                    maxDate: this.getDate(d3.max(json, function(datum) {return datum.date})),\r\n                    title: \"US deaths/day\"\r\n                }\r\n            ]})\r\n            this.render()\r\n        })\r\n    }\r\n\r\n    // convert yyyymmdd integer to Date object\r\n    getDate(numberDate) {\r\n        const year = Math.floor(numberDate / 10000);\r\n        const month = Math.floor((numberDate) / 100) - 1 - (year * 100);\r\n        const day = numberDate - (year * 10000) - ((month + 1)* 100);\r\n        const date = new Date(year, month, day);\r\n        return date;\r\n    }\r\n\r\n    // get derivations of the discreet data\r\n    derive(data, derivationNumber) {\r\n        if (derivationNumber < 0) {\r\n            return;\r\n        }\r\n\r\n        if (derivationNumber === 0) {\r\n            return data;\r\n        }\r\n\r\n        for (let i = 0; i < data.length - 1; i++) {\r\n            data[i].death = data[i].death - data[i+1].death ;\r\n        }\r\n\r\n        data.pop();\r\n        return this.derive(data, --derivationNumber);\r\n    }\r\n\r\n    // get graphable array\r\n    cumulativeData(data) {\r\n        data = data.map(datum => {\r\n            return { x: this.getDate(datum.date), y: datum.death? datum.death : 0}})\r\n        return data\r\n    }\r\n\r\n    isDataLoaded() {\r\n        let pointsExists = !!this.state?.covidData[0];\r\n        let pointsHasData = false;\r\n        if (pointsExists) {\r\n            pointsHasData = !!this.state.covidData[0].points && this.state.covidData[0].points.length > 0;\r\n        }\r\n        return pointsHasData;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Graph\">\r\n                { this.isDataLoaded() ? (\r\n                    <div>\r\n                        <LineChart \r\n                            data={this.state.covidData[0]}\r\n                            width={600}\r\n                            height={300}\r\n                        /> \r\n                        <LineChart \r\n                            data={this.state.covidData[1]}\r\n                            width={600}\r\n                            height={300}\r\n                        />\r\n                    </div>)\r\n                    : ( <div>loading...</div>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Graph;","import React from 'react';\r\nimport './ContactCard.css'\r\n\r\nclass ContactCard extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"ContactCard\">\r\n                <div>David Alvarez Contact</div>\r\n                <div>Email: <a href=\"mailto:d.alvar.work@gmail.com\">d.alvar.work@gmail.com</a></div>\r\n                <div>Phone: <a href=\"tel:+12068905009\">206-890-5009</a></div>\r\n                <div>LinkedIn: <a \r\n                    href=\"https://linkedin.com/in/david-g-alvarez\" \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\"\r\n                >david-g-alvarez</a></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactCard;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Graph from './Graph';\nimport ContactCard from './ContactCard';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <Graph />\n    <ContactCard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//https://create-react-app.dev/docs/making-a-progressive-web-app/\nserviceWorker.register();\n"],"sourceRoot":""}