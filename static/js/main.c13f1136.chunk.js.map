{"version":3,"sources":["App.js","serviceWorker.js","Graph.js","ContactCard.js","index.js"],"names":["App","state","data","GetWorldStatistics","bind","fetch","method","then","response","json","setState","this","className","cases","deaths","recovered","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","Graph","headers","render","numberDate","year","Math","floor","month","Date","date","now","diffTime","abs","ceil","derivationNumber","i","length","positive","pop","derive","map","datum","x","getDaysSince","getDate","y","cumulativeData","firstDerivativeData","secondDerivativeData","height","width","ContactCard","href","target","rel","ReactDOM","StrictMode","document","getElementById","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"oTAwCeA,G,wDApCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CAACC,KAAM,IAEpB,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAJd,E,iEAQQ,IAAD,OACnBC,MAAM,+CAAgD,CAACC,OAAQ,QAC5DC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAAAE,GACJ,EAAKC,SAAS,CAAER,KAAMO,S,0CAK1BE,KAAKR,uB,+BAIL,OACE,yBAAKS,UAAU,OACb,4BAAQA,UAAU,cAChB,8CACA,uCAAaD,KAAKV,MAAMC,KAAKW,OAC7B,wCAAcF,KAAKV,MAAMC,KAAKY,QAC9B,2CAAiBH,KAAKV,MAAMC,KAAKa,iB,GA9BzBC,IAAMC,YCSlBC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTlB,MAAK,SAAAuB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/B,QACf0B,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,iHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,iBCAlDC,G,wDA1FX,aAAe,IAAD,8BACV,gBACKzC,MAAQ,CAACC,KAAM,IAEpB,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAJhB,E,iEAMQ,IAAD,OACjBC,MAAM,iDAAkD,CAACC,OAAQ,MAAOqC,QAAS,CAC7E,eAAgB,mBAChB,OAAU,sBAETpC,MAAK,SAACC,GACH,OAAOA,EAASC,UAEnBF,MAAK,SAAAE,GACF,EAAKC,SAAS,CAAER,KAAMO,IACtB,EAAKmC,c,0CAKbjC,KAAKR,uB,8BAID0C,GACJ,IAAMC,EAAOC,KAAKC,MAAMH,EAAa,KAC/BI,EAAQF,KAAKC,MAAOH,EAAc,KAAO,EAAY,IAAPC,EAGpD,OADa,IAAII,KAAKJ,EAAMG,EADhBJ,EAAqB,IAAPC,EAA8B,KAAZG,EAAQ,M,mCAM3CE,GACT,IAAMC,EAAM,IAAIF,KACZG,EAAWN,KAAKO,IAAIF,EAAMD,GAC9B,OAAOJ,KAAKQ,KAAKF,EAAQ,S,6BAItBnD,EAAMsD,GACT,KAAIA,EAAmB,GAAvB,CAIA,GAAyB,IAArBA,EACA,OAAOtD,EAGX,IAAK,IAAIuD,EAAI,EAAGA,EAAIvD,EAAKwD,OAAS,EAAGD,IACjCvD,EAAKuD,GAAGE,SAAWzD,EAAKuD,GAAGE,SAAWzD,EAAKuD,EAAE,GAAGE,SAKpD,OAFAzD,EAAK0D,MACLJ,IACO7C,KAAKkD,OAAO3D,EAAMsD,M,qCAIdtD,GAAO,IAAD,OAGjB,OAFAA,EAAOA,EAAK4D,KAAI,SAAAC,GACZ,MAAO,CAACC,GAAI,EAAI,EAAKC,aAAa,EAAKC,QAAQH,EAAMZ,OAAQgB,EAAGJ,EAAMJ,e,+BAK1E,IAAIS,EAAiBzD,KAAKyD,eAAezD,KAAKV,MAAMC,MAChDmE,EAAsB1D,KAAKyD,eAAezD,KAAKkD,OAAOlD,KAAKV,MAAMC,KAAM,IACvEoE,EAAuB3D,KAAKyD,eAAezD,KAAKkD,OAAOlD,KAAKV,MAAMC,KAAM,IAE5E,OACI,yBAAKU,UAAU,SACX,wDACA,kBAAC,IAAD,CAAQ2D,OAAQ,IAAKC,MAAO,KACxB,kBAAC,IAAD,CAAYtE,KAAMkE,KAEtB,sEACA,kBAAC,IAAD,CAAQG,OAAQ,IAAKC,MAAO,KACxB,kBAAC,IAAD,CAAYtE,KAAMmE,KAEtB,iEACA,kBAAC,IAAD,CAAQE,OAAQ,IAAKC,MAAO,KACxB,kBAAC,IAAD,CAAYtE,KAAMoE,U,GApFlBrD,cCgBLwD,G,6KAhBP,OACI,yBAAK7D,UAAU,eACX,sDACA,uCAAY,uBAAG8D,KAAK,iCAAR,2BACZ,uCAAY,uBAAGA,KAAK,oBAAR,iBACZ,yCACA,uBACIA,KAAK,0CACLC,OAAO,SACPC,IAAI,uBAHR,0B,GARU5D,IAAMC,YCKhC4D,IAASjC,OACP,kBAAC,IAAMkC,WAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEFC,SAASC,eAAe,SHQnB,SAAkBtD,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIsD,IAAIC,WAAwB9D,OAAOC,SAASqD,MACpDS,SAAW/D,OAAOC,SAAS8D,OAIvC,OAGF/D,OAAOgE,iBAAiB,QAAQ,WAC9B,IAAM3D,EAAK,UAAMyD,WAAN,sBAEPhE,IAgEV,SAAiCO,EAAOC,GAEtCrB,MAAMoB,EAAO,CACXkB,QAAS,CAAE,iBAAkB,YAE5BpC,MAAK,SAAAC,GAEJ,IAAM6E,EAAc7E,EAASmC,QAAQ2C,IAAI,gBAEnB,MAApB9E,EAAS+E,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C7D,UAAUC,cAAc6D,MAAMlF,MAAK,SAAAuB,GACjCA,EAAa4D,aAAanF,MAAK,WAC7Ba,OAAOC,SAASsE,eAKpBnE,EAAgBC,EAAOC,MAG1Bc,OAAM,WACLJ,QAAQC,IACN,oEAvFAuD,CAAwBnE,EAAOC,GAI/BC,UAAUC,cAAc6D,MAAMlF,MAAK,WACjC6B,QAAQC,IACN,iHAMJb,EAAgBC,EAAOC,OGhC/BE,K","file":"static/js/main.c13f1136.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {data: []}\n\n    this.GetWorldStatistics = this.GetWorldStatistics.bind(this);\n  }\n\n\n  GetWorldStatistics() {\n    fetch('https://coronavirus-19-api.herokuapp.com/all', {method: 'GET'})\n      .then((response) =>{\n        return response.json();\n      })\n      .then(json => {\n        this.setState({ data: json});\n      })\n  }\n\n  componentDidMount() {\n    this.GetWorldStatistics();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>Global stats:</div>\n          <div>cases: {this.state.data.cases}</div>\n          <div>deaths: {this.state.data.deaths}</div>\n          <div>recovered: {this.state.data.recovered}</div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\r\nimport '../node_modules/react-vis/dist/style.css';\r\nimport { XYPlot, LineSeries } from 'react-vis';\r\nimport './Graph.css';\r\n\r\nclass Graph extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {data: []};\r\n\r\n        this.GetWorldStatistics = this.GetWorldStatistics.bind(this);\r\n    }\r\n    GetWorldStatistics() {\r\n        fetch('https://covidtracking.com/api/v1/us/daily.json', {method: 'GET', headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        }} )\r\n            .then((response) =>{\r\n                return response.json();\r\n            })\r\n            .then(json => {\r\n                this.setState({ data: json});\r\n                this.render()\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.GetWorldStatistics();\r\n    }\r\n\r\n    // convert yyyymmdd integer to Date object\r\n    getDate(numberDate) {\r\n        const year = Math.floor(numberDate / 10000);\r\n        const month = Math.floor((numberDate) / 100) - 1 - (year * 100);\r\n        const day = numberDate - (year * 10000) - ((month + 1)* 100);\r\n        const date = new Date(year, month, day);\r\n        return date;\r\n    }\r\n\r\n    // return the number of days since a given date\r\n    getDaysSince(date) {\r\n        const now = new Date();\r\n        let diffTime = Math.abs(now - date);\r\n        return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    }\r\n\r\n    // get derivations of the discreet data\r\n    derive(data, derivationNumber) {\r\n        if (derivationNumber < 0) {\r\n            return;\r\n        }\r\n\r\n        if (derivationNumber === 0) {\r\n            return data;\r\n        }\r\n\r\n        for (let i = 0; i < data.length - 1; i++) {\r\n            data[i].positive = data[i].positive - data[i+1].positive ;\r\n        }\r\n\r\n        data.pop();\r\n        derivationNumber--;\r\n        return this.derive(data, derivationNumber);\r\n    }\r\n\r\n    // get graphable array\r\n    cumulativeData(data) {\r\n        data = data.map(datum => {\r\n            return {x: -1 * this.getDaysSince(this.getDate(datum.date)), y: datum.positive}})\r\n        return data\r\n    }\r\n\r\n    render() {\r\n        let cumulativeData = this.cumulativeData(this.state.data);\r\n        let firstDerivativeData = this.cumulativeData(this.derive(this.state.data, 1));\r\n        let secondDerivativeData = this.cumulativeData(this.derive(this.state.data, 2));\r\n\r\n        return (\r\n            <div className=\"Graph\">\r\n                <div>cumulative global cases</div>\r\n                <XYPlot height={300} width={300}>\r\n                    <LineSeries data={cumulativeData} />\r\n                </XYPlot>\r\n                <div>calculated change in global cases/day</div>\r\n                <XYPlot height={300} width={300}>\r\n                    <LineSeries data={firstDerivativeData} />\r\n                </XYPlot>\r\n                <div>acceleration of global cases/day</div>\r\n                <XYPlot height={300} width={300}>\r\n                    <LineSeries data={secondDerivativeData} />\r\n                </XYPlot>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Graph;","import React from 'react';\r\nimport './ContactCard.css'\r\n\r\nclass ContactCard extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"ContactCard\">\r\n                <div>David Alvarez Contact</div>\r\n                <div>Email: <a href=\"mailto:d.alvar.work@gmail.com\">d.alvar.work@gmail.com</a></div>\r\n                <div>Phone: <a href=\"tel:+12068905009\">206-890-5009</a></div>\r\n                <div>LinkedIn:\r\n                <a \r\n                    href=\"https://linkedin.com/in/david-g-alvarez\" \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\"\r\n                > david-g-alvarez</a></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactCard;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Graph from './Graph';\nimport ContactCard from './ContactCard';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <Graph />\n    <ContactCard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//https://create-react-app.dev/docs/making-a-progressive-web-app/\nserviceWorker.register();\n"],"sourceRoot":""}