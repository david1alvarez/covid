{"version":3,"sources":["App.js","serviceWorker.js","Line.js","DataSeries.js","LineChart.js","Graph.js","ContactCard.js","index.js"],"names":["App","state","data","GetWorldStatistics","bind","fetch","method","then","response","json","setState","this","className","cases","deaths","recovered","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","Line","props","path","stroke","fill","strokeWidth","d","defaultProps","DataSeries","colors","xScale","yScale","line","d3","x","y","curve","lines","points","map","series","id","key","LineChart","width","height","domain","minDate","maxDate","range","ticks","every","yMin","yMax","Graph","graphData","cumulativeData","derive","xValues","datum","getDate","date","positive","headers","render","numberDate","year","Math","floor","month","Date","now","diffTime","abs","ceil","derivationNumber","i","length","pop","startDate","endDate","getMonth","getFullYear","pointsHasData","isDataLoaded","ContactCard","href","target","rel","ReactDOM","StrictMode","document","getElementById","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6070c3c1.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {data: []}\n\n    this.GetWorldStatistics = this.GetWorldStatistics.bind(this);\n  }\n\n\n  GetWorldStatistics() {\n    fetch('https://coronavirus-19-api.herokuapp.com/all', {method: 'GET'})\n      .then((response) =>{\n        return response.json();\n      })\n      .then(json => {\n        this.setState({ data: json});\n      })\n  }\n\n  componentDidMount() {\n    this.GetWorldStatistics();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>Global stats:</div>\n          <div>cases: {this.state.data.cases}</div>\n          <div>deaths: {this.state.data.deaths}</div>\n          <div>recovered: {this.state.data.recovered}</div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react'\r\n\r\nclass Line extends Component {\r\n    // constructor() {\r\n    //     super()\r\n    // }\r\n\r\n    static defaultProps = {\r\n        stroke: 'white',\r\n        fill: 'none',\r\n        strokeWidth: 3\r\n    }\r\n\r\n    render() {\r\n        let {path, stroke, fill, strokeWidth } = this.props;\r\n        return (\r\n            <path\r\n                d={path}\r\n                stroke={stroke}\r\n                fill={fill}\r\n                strokeWidth={strokeWidth}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Line;","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport Line from './Line';\r\n\r\nclass DataSeries extends Component {\r\n    // constructor() {\r\n    //     super()\r\n    // }\r\n\r\n    static defaultProps = {\r\n        data: [],\r\n        colors: d3.scaleOrdinal(d3.schemeCategory10)\r\n    }\r\n\r\n    render() {\r\n        let { data, colors, xScale, yScale } = this.props;\r\n\r\n        let line = d3.line()\r\n            .x((d) => {return xScale(d.x);})\r\n            .y((d) => {\r\n                // returns undefined\r\n                console.log('yScale(d.y) is: ', yScale(d.y))\r\n                return yScale(d.y);})\r\n            .curve(d3.curveCardinal);\r\n\r\n        let lines = data.points.map((series, id) => {\r\n            return (\r\n                <Line\r\n                    path={line(series)}\r\n                    stroke={colors(id)}\r\n                    key={id}\r\n                />)\r\n        })\r\n\r\n        return (\r\n            <g>{lines}</g>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataSeries;","import React, { Component } from 'react';\r\nimport DataSeries from './DataSeries';\r\nimport * as d3 from 'd3';\r\n\r\nclass LineChart extends Component {\r\n    // constructor() {\r\n    //     super()\r\n    // }\r\n\r\n    static defaultProps = {\r\n        width: 600,\r\n        height: 300\r\n    }\r\n\r\n    render() {\r\n        let { width, height, data } = this.props;\r\n\r\n        // https://stackoverflow.com/questions/35930047/d3-line-chart-x-line-function-always-renders-nan\r\n        let xScale = d3.scaleTime()\r\n                        .domain([data.minDate, data.maxDate])\r\n                        .range([0, width])\r\n        xScale.ticks(d3.timeDay.every(5));\r\n\r\n        let yScale = d3.scaleLinear()\r\n                        .domain([data.yMin, data.yMax])\r\n                        .range([height, 10])\r\n\r\n        return (\r\n            <svg width={width} height={height}>\r\n                <DataSeries \r\n                    xScale={xScale}\r\n                    yScale={yScale}\r\n                    data={data}\r\n                    width={width}\r\n                    height={height}\r\n                />\r\n            </svg>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LineChart;","import React, { Component } from 'react';\r\nimport '../node_modules/react-vis/dist/style.css';\r\nimport * as d3 from 'd3';\r\nimport './Graph.css';\r\nimport LineChart from './LineChart';\r\n\r\nclass Graph extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {data: [], graphData: {}};\r\n\r\n        this.GetWorldStatistics = this.GetWorldStatistics.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.GetWorldStatistics()\r\n\r\n        this.setState({graphData: {\r\n            points: [\r\n                // cumulativedata needs to return the dates, not the numbers\r\n                this.cumulativeData(this.state.data),\r\n                this.cumulativeData(this.derive(this.state.data, 1))\r\n            ],\r\n            xValues: this.state.data.map(datum => {return this.getDate(datum.date)}),\r\n            minDate: this.getDate(d3.min(this.state.data, function(datum) {return datum.date})),\r\n            maxDate: this.getDate(d3.max(this.state.data, function(datum) {return datum.date})),\r\n            yMin: d3.min(this.state.data, function(datum) {return datum.positive}),\r\n            yMax: d3.max(this.state.data, function(datum) {return datum.positive})\r\n        }})\r\n    }\r\n\r\n    GetWorldStatistics() {\r\n        fetch('https://covidtracking.com/api/v1/us/daily.json', {method: 'GET', headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        }} )\r\n        .then((response) =>{\r\n            return response.json();\r\n        })\r\n        .then(json => {\r\n            // this.setState({ data: json});\r\n            this.setState({ data: json, graphData: {\r\n                points: [\r\n                    this.cumulativeData(json)//,\r\n                    // this.cumulativeData(this.derive(json, 1))\r\n                ],\r\n                xValues: json.map(datum => {return this.getDate(datum.date)}),\r\n                minDate: this.getDate(d3.min(json, function(datum) {return datum.date})),\r\n                maxDate: this.getDate(d3.max(json, function(datum) {return datum.date})),\r\n                yMin: d3.min(json, function(datum) {return datum.positive}),\r\n                yMax: d3.max(json, function(datum) {return datum.positive})\r\n            }})\r\n            this.render()\r\n        })\r\n    }\r\n\r\n    // convert yyyymmdd integer to Date object\r\n    getDate(numberDate) {\r\n        const year = Math.floor(numberDate / 10000);\r\n        const month = Math.floor((numberDate) / 100) - 1 - (year * 100);\r\n        const day = numberDate - (year * 10000) - ((month + 1)* 100);\r\n        const date = new Date(year, month, day);\r\n        return date;\r\n    }\r\n\r\n    // return the number of days since a given date\r\n    getDaysSince(date) {\r\n        const now = new Date();\r\n        let diffTime = Math.abs(now - date);\r\n        return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    }\r\n\r\n    // get derivations of the discreet data\r\n    derive(data, derivationNumber) {\r\n        if (derivationNumber < 0) {\r\n            return;\r\n        }\r\n\r\n        if (derivationNumber === 0) {\r\n            return data;\r\n        }\r\n\r\n        for (let i = 0; i < data.length - 1; i++) {\r\n            data[i].positive = data[i].positive - data[i+1].positive ;\r\n        }\r\n\r\n        data.pop();\r\n        derivationNumber--;\r\n        return this.derive(data, derivationNumber);\r\n    }\r\n\r\n    // get graphable array\r\n    cumulativeData(data) {\r\n        data = data.map(datum => {\r\n            return { x: this.getDate(datum.date), y: datum.positive}})\r\n        return data\r\n    }\r\n\r\n    getMonthRange(startDate, endDate) {\r\n        return endDate.getMonth() - startDate.getMonth()\r\n            + (12 * (endDate.getFullYear() - startDate.getFullYear()))\r\n    }\r\n\r\n    isDataLoaded() {\r\n        let pointsExists = !!this.state?.graphData?.points;\r\n        let pointsHasData = false;\r\n        if (pointsExists) {\r\n            pointsHasData = this.state?.graphData?.points[0].length > 0;\r\n        }\r\n        return pointsHasData;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Graph\">\r\n                { this.isDataLoaded() ? (\r\n                    <LineChart \r\n                        data={this.state.graphData}\r\n                        width={600}\r\n                        height={300}\r\n                    />) \r\n                    : ( <div>loading...</div>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Graph;","import React from 'react';\r\nimport './ContactCard.css'\r\n\r\nclass ContactCard extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"ContactCard\">\r\n                <div>David Alvarez Contact</div>\r\n                <div>Email: <a href=\"mailto:d.alvar.work@gmail.com\">d.alvar.work@gmail.com</a></div>\r\n                <div>Phone: <a href=\"tel:+12068905009\">206-890-5009</a></div>\r\n                <div>LinkedIn: <a \r\n                    href=\"https://linkedin.com/in/david-g-alvarez\" \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\"\r\n                >david-g-alvarez</a></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactCard;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Graph from './Graph';\nimport ContactCard from './ContactCard';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <Graph />\n    <ContactCard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//https://create-react-app.dev/docs/making-a-progressive-web-app/\nserviceWorker.register();\n"],"sourceRoot":""}